# Generated by Django 5.2.7 on 2025-10-24 02:32

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='グループ名')),
                ('invitation_code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='QRコードやリンクに使用される一意のコード', unique=True, verbose_name='招待コード')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
            ],
            options={
                'verbose_name': 'グループ',
                'verbose_name_plural': 'グループ',
            },
        ),
        migrations.CreateModel(
            name='RPiData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(choices=[('shelter_checkin', '避難所受付データ'), ('food_distribution', '炊き出し確認データ'), ('environmental', '環境センサーデータ'), ('other', 'その他')], max_length=50, verbose_name='データタイプ')),
                ('device_id', models.CharField(help_text='データ送信元のRaspberry Piや端末の識別子', max_length=100, verbose_name='RPiデバイスID')),
                ('payload', models.JSONField(help_text="データ本体。例: {'user_id': 'U001', 'checkin_time': '...'}", verbose_name='構造化データ (JSON)')),
                ('received_at', models.DateTimeField(auto_now_add=True, verbose_name='受信日時')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='緯度')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='経度')),
                ('is_processed', models.BooleanField(default=False, help_text='このデータが分析や集計で利用されたかどうか', verbose_name='処理済')),
            ],
            options={
                'verbose_name': 'RPiデータ',
                'verbose_name_plural': 'RPiデータ一覧',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('general', '一般ユーザー'), ('admin', 'システム管理者'), ('rescuer', '救助チーム')], default='general', max_length=20)),
                ('safety_status', models.CharField(choices=[('safe', '無事'), ('help', '要支援'), ('unknown', '未確認')], default='unknown', max_length=20)),
                ('full_name', models.CharField(blank=True, max_length=150, verbose_name='氏名')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='メールアドレス')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_known_latitude', models.FloatField(blank=True, null=True)),
                ('last_known_longitude', models.FloatField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='sotsuken_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='sotsuken_user_permissions_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='避難所名')),
                ('address', models.CharField(max_length=255, verbose_name='住所')),
                ('latitude', models.FloatField(verbose_name='緯度')),
                ('longitude', models.FloatField(verbose_name='経度')),
                ('max_capacity', models.IntegerField(verbose_name='最大収容人数')),
                ('current_occupancy', models.IntegerField(default=0, verbose_name='現在の収容人数')),
                ('opening_status', models.CharField(choices=[('open', '開設中'), ('closed', '閉鎖'), ('preparating', '開設準備中')], default='open', max_length=20, verbose_name='開設状況')),
                ('is_pet_friendly', models.BooleanField(default=False, verbose_name='ペット可')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
            ],
            options={
                'verbose_name': '避難所',
                'verbose_name_plural': '避難所一覧',
            },
        ),
        migrations.CreateModel(
            name='SafetyStatus',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='safety_status_record', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
                ('status', models.CharField(choices=[('safe', '無事'), ('help', '支援が必要'), ('unknown', '未確認'), ('checking', '確認中')], default='unknown', max_length=20, verbose_name='安否状態')),
                ('message', models.TextField(blank=True, help_text='状況を知らせる自由記述のメッセージ (例: ○○に避難中、食料あり)', null=True, verbose_name='状況メッセージ')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='緯度')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='経度')),
            ],
            options={
                'verbose_name': '安否状況',
                'verbose_name_plural': '安否状況',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='メッセージ内容')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='送信日時')),
                ('destination_type', models.CharField(choices=[('group', 'グループチャット'), ('dm', 'ダイレクトメッセージ'), ('community', 'コミュニティ投稿')], default='group', max_length=20, verbose_name='宛先タイプ')),
                ('is_read', models.BooleanField(default=False, verbose_name='既読')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_messages', to='Sotsuken_Portable.group', verbose_name='宛先グループ')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='送信者')),
            ],
            options={
                'verbose_name': 'メッセージ',
                'verbose_name_plural': 'メッセージ一覧',
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_groups', to=settings.AUTH_USER_MODEL, verbose_name='作成者'),
        ),
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='タイトル')),
                ('content', models.TextField(verbose_name='内容')),
                ('posted_at', models.DateTimeField(auto_now_add=True, verbose_name='投稿日時')),
                ('region_tag', models.CharField(blank=True, help_text='例: 〇〇地区、避難所A', max_length=50, null=True, verbose_name='地域タグ')),
                ('status', models.CharField(choices=[('published', '公開済'), ('draft', '下書き'), ('review', '管理者確認中'), ('hidden', '非表示')], default='published', max_length=20, verbose_name='公開ステータス')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最終更新日時')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_posts', to=settings.AUTH_USER_MODEL, verbose_name='投稿者')),
            ],
            options={
                'verbose_name': 'コミュニティ投稿',
                'verbose_name_plural': 'コミュニティ投稿一覧',
                'ordering': ['-posted_at'],
            },
        ),
        migrations.CreateModel(
            name='SOSReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_at', models.DateTimeField(auto_now_add=True, verbose_name='発信日時')),
                ('latitude', models.FloatField(verbose_name='緯度')),
                ('longitude', models.FloatField(verbose_name='経度')),
                ('situation_notes', models.TextField(blank=True, help_text='発信時に自動送信された情報や現場の状況メモ', null=True, verbose_name='状況メモ')),
                ('status', models.CharField(choices=[('pending', '未対応'), ('dispatched', '救助隊派遣済'), ('resolved', '解決済'), ('false_alarm', '誤報/キャンセル')], default='pending', max_length=20, verbose_name='対応状況')),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sos_reports', to=settings.AUTH_USER_MODEL, verbose_name='発信者')),
            ],
            options={
                'verbose_name': 'SOSレポート',
                'verbose_name_plural': 'SOSレポート一覧',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('food', '食料'), ('water', '飲料水'), ('medical', '医療/医薬品'), ('shelter', '避難場所/毛布'), ('other', 'その他')], max_length=20, verbose_name='要請カテゴリ')),
                ('priority', models.CharField(choices=[('high', '高 (緊急)'), ('medium', '中'), ('low', '低')], max_length=10, verbose_name='優先度')),
                ('details', models.TextField(blank=True, null=True, verbose_name='詳細な状況/数量')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='要請日時')),
                ('status', models.CharField(choices=[('pending', '未対応'), ('in_progress', '対応中'), ('resolved', '解決済'), ('cancelled', 'キャンセル')], default='pending', max_length=20, verbose_name='対応状況')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='緯度')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='経度')),
                ('requester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='support_requests', to=settings.AUTH_USER_MODEL, verbose_name='要請者')),
            ],
            options={
                'verbose_name': '支援要請',
                'verbose_name_plural': '支援要請一覧',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'メンバー'), ('admin', 'グループ管理者')], default='member', max_length=20, verbose_name='グループ内権限')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='参加日時')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='Sotsuken_Portable.group', verbose_name='グループ')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL, verbose_name='メンバー')),
            ],
            options={
                'verbose_name': 'グループメンバー',
                'verbose_name_plural': 'グループメンバー',
                'unique_together': {('group', 'member')},
            },
        ),
    ]
